get:
  parameters:
    -
      in: query
      type: string
      description: 'query param:page'
      required: false
      name: page
  tags: []
  description: 'article list'
  security: []
  responses:
    default:
      description: 'service error'
      schema:
        $ref: '#/definitions/Error'
    200:
      description: 'response of 200'
      schema:
        type: object
        properties:
          message:
            type: string
            enum:
              - ok
          data:
            type: object
            properties:
              page:
                type: string
                enum:
                  - page
              pageSize:
                type: string
                enum:
                  - pageSize
              list:
                type: string
                enum:
                  - list
post:
  parameters:
    -
      in: body
      description: 'payload params'
      name: body
      schema:
        type: object
        properties:
          title:
            type: string
          content:
            type: string
          tags:
            type: string
          cateId:
            type: string
          permission:
            type: string
          created:
            type: string
  tags: []
  description: 'create article'
  security: []
  responses:
    default:
      description: 'service error'
      schema:
        $ref: '#/definitions/Error'
    400:
      description: 'response of 400'
      schema:
        type: object
        properties:
          message:
            type: string
            enum:
              - 'Illegal param permission'
              - 'title required'
              - 'content can not empty'
    200:
      description: 'response of 200'
      schema:
        type: object
        properties:
          code:
            type: integer
            enum:
              - 0
          message:
            type: string
            enum:
              - ok
