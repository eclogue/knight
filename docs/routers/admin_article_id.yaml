get:
  parameters:
    -
      in: path
      name: id
      required: true
      description: id
      type: string
  tags: []
  description: ''
  security: []
  responses:
    default:
      description: 'service error'
      schema:
        $ref: '#/definitions/Error'
    400:
      description: 'response of 400'
      schema:
        type: object
        properties:
          message:
            type: string
            enum:
              - 'Illegal ID'
              - 'article not found'
          code:
            type: integer
            enum:
              - 1
              - 2
    200:
      description: 'response of 200'
      schema:
        type: object
        properties:
          message:
            type: string
            enum:
              - ok
          code:
            type: integer
            enum:
              - 0
          data:
            type: string
            enum:
              - art
delete:
  parameters:
    -
      in: path
      name: id
      required: true
      description: id
      type: string
  tags: []
  description: 'drop a article by id'
  security: []
  responses:
    default:
      description: 'service error'
      schema:
        $ref: '#/definitions/Error'
    400:
      description: 'response of 400'
      schema:
        type: object
        properties:
          message:
            type: string
            enum:
              - 'Illegal ID'
              - 'article not found'
          code:
            type: integer
            enum:
              - 1
              - 2
    200:
      description: 'response of 200'
      schema:
        type: object
        properties:
          message:
            type: string
            enum:
              - ok
          code:
            type: integer
            enum:
              - 0
put:
  parameters:
    -
      in: path
      name: id
      required: true
      description: id
      type: string
    -
      in: body
      description: 'payload params'
      name: body
      schema:
        type: object
        properties:
          title:
            type: string
          tags:
            type: string
          content:
            type: string
          cateId:
            type: string
          created:
            type: string
          permission:
            type: string
  tags: []
  description: ''
  security: []
  responses:
    default:
      description: 'service error'
      schema:
        $ref: '#/definitions/Error'
    400:
      description: 'response of 400'
      schema:
        type: object
        properties:
          message:
            type: string
            enum:
              - 'content && title are required'
              - 'article not found'
          code:
            type: integer
            enum:
              - 1
              - 2
    200:
      description: 'response of 200'
      schema:
        type: object
        properties:
          message:
            type: string
            enum:
              - ok
          code:
            type: integer
            enum:
              - 0
